[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
authors = [
    {name = "Daniela Rus Morales", email = "danirus@eml.cc"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Sphinx",
    "Framework :: Sphinx :: Theme",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
]
dependencies = ["sphinx >= 6,<9"]
description = "The Nefertiti for Sphinx theme."
dynamic = ["version"]
license = {file = "LICENSE"}
name = "sphinx_nefertiti"
readme = "README.md"
requires-python = ">=3.9"

[project.entry-points."sphinx.html_themes"]
sphinx_nefertiti = "sphinx_nefertiti"

[project.urls]
Homepage = "https://github.com/danirus/sphinx-nefertiti"
Documentation = "https://sphinx-nefertiti.readthedocs.io"

[project.optional-dependencies]
dev = [
    "coverage >=7.6.4, <7.7",
    "coverage-badge >=1.1.2, <1.2",
    "lxml >=5.3.0, <5.4",
    "pre-commit >=4.0.1",
    "pytest >=8.3.3, <8.4",
    "tox >=4.23.2",
    "ruff >=0.7.0",
]
docs = [
    "sphinx >=8.1.3, <8.2",
    "myst-parser >=4.0.0, <4.1",
    "sphinx-colorschemed-images >=0.2.0",
    "sphinx_copybutton >=0.5.2, <1.0.0",
    "sphinx-design >=0.6.1, <0.7",
    "sphinx-nefertiti >=0.5.0",
]

[tool.setuptools]
packages = ['sphinx_nefertiti']

[tool.setuptools.dynamic]
version = {attr = "sphinx_nefertiti.__version__"}

[tool.ruff]
exclude = [
    "docs/",
    "venv/",
]
line-length = 80

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    # "FURB",# refurb (modernising code)
    "I",   # isort
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "N",   # pep8-naming
    "PERF",# perflint (performance anti-patterns)
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PTH", # flake8-use-pathlib
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "T20", # flake8-print
]
